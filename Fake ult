local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local animationMap = {
    ["Charles"] = "rbxassetid://101956908324027",
    ["Choso"] = "rbxassetid://105826208784475",
    ["Gojo"] = "rbxassetid://135510919823719",
    ["Hakari"] = "rbxassetid://108412968733387",
    ["Heian"] = "rbxassetid://73048386765082",
    ["Hiromi"] = "rbxassetid://80922461169812",
    ["Itadori"] = "rbxassetid://112577421904593",
    ["Locust"] = "rbxassetid://94590184881876",
	["Todo"] = "rbxassetid://77323960817460",
    ["Mahito"] = "rbxassetid://80852442092385",
	["Yuki"] = "rbxassetid://79717812541463,
	["Yuta"] = "rbxassetid://78597247729399",
    ["Megumi"] = "rbxassetid://74442134184452",
}


local isPlaying = false
local animationTrack = nil
local function playCharacterAnimation()
	if isPlaying then return end
	isPlaying = true

	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local moveset = player:GetAttribute("Moveset")

	if not moveset then
		warn("No Moveset attribute found on player.")
		isPlaying = false
		return
	end

	local animId = animationMap[moveset]
	if not animId then
		warn("No animation mapped for moveset:", moveset)
		isPlaying = false
		return
	end

	local animation = Instance.new("Animation")
	animation.AnimationId = animId
	animationTrack = humanoid:LoadAnimation(animation)
	animationTrack:Play()

	task.delay(4, function()
		if animationTrack and animationTrack.IsPlaying then
			animationTrack:Stop()
		end
		isPlaying = false
	end)
end

-- Detect key press (N)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.N then
		playCharacterAnimation()
	end
end)
