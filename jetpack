local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

local function setupJetpack()
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

	local jetpackActive = false
	local jetpackForce = 45 -- Slightly slower than original
	local bodyVelocity = nil
	local bodyGyro = nil

	RunService.RenderStepped:Connect(function()
		if jetpackActive and bodyVelocity and bodyGyro then
			bodyVelocity.Velocity = Vector3.new(0, jetpackForce, 0)
			bodyGyro.CFrame = CFrame.new(
				humanoidRootPart.Position,
				humanoidRootPart.Position + Vector3.new(humanoidRootPart.CFrame.LookVector.X, 0, humanoidRootPart.CFrame.LookVector.Z)
			)
		end
	end)

	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
			if not jetpackActive then
				jetpackActive = true

				bodyVelocity = Instance.new("BodyVelocity")
				bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
				bodyVelocity.Velocity = Vector3.new(0, jetpackForce, 0)
				bodyVelocity.Parent = humanoidRootPart

				bodyGyro = Instance.new("BodyGyro")
				bodyGyro.MaxTorque = Vector3.new(0, 0, math.huge)
				bodyGyro.CFrame = humanoidRootPart.CFrame
				bodyGyro.P = 3000
				bodyGyro.D = 600
				bodyGyro.Parent = humanoidRootPart
			end
		end
	end)

	UserInputService.InputEnded:Connect(function(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
			jetpackActive = false

			if bodyVelocity then
				bodyVelocity:Destroy()
				bodyVelocity = nil
			end
			if bodyGyro then
				bodyGyro:Destroy()
				bodyGyro = nil
			end
		end
	end)
end

-- Handle character respawn
if player.Character then
	setupJetpack()
end
player.CharacterAdded:Connect(setupJetpack)
