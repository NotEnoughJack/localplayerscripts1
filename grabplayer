local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer

local function getHRP()
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
return character:WaitForChild("HumanoidRootPart")
end

local function getClosestPlayer()
local myHRP = getHRP()
local closestPlayer = nil
local shortestDistance = math.huge

for _, player in pairs(Players:GetPlayers()) do
if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
local otherHRP = player.Character.HumanoidRootPart
local distance = (myHRP.Position - otherHRP.Position).Magnitude

if distance < shortestDistance then
shortestDistance = distance
closestPlayer = player
end
end
end

return closestPlayer
end

local function teleportToClosestPlayer()
local myHRP = getHRP()
local targetPlayer = getClosestPlayer()

if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
local targetHRP = targetPlayer.Character.HumanoidRootPart
local direction = (targetHRP.Position - myHRP.Position).Unit
local newPosition = targetHRP.Position - direction * 10
myHRP.CFrame = CFrame.new(newPosition, targetHRP.Position)
end
end

local isSpamming = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
if gameProcessed then return end

if input.KeyCode == Enum.KeyCode.One and not isSpamming then
isSpamming = true

task.wait(1)

local startTime = tick()

local connection
connection = RunService.RenderStepped:Connect(function()
if tick() - startTime >= 2 then
connection:Disconnect()
isSpamming = false
else
teleportToClosestPlayer()
end
end)
end
end)

game.workspace.Effects.DescendantAdded:Connect(function(descendant)
    if descendant.Name == "Hitsphere" then
        descendant.Size = Vector3.new(40,40,40)
    end
end)
